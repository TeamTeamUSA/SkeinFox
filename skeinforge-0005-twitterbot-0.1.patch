diff -rcN --exclude=.DS_STORE skeinforge-0005/documentation/skeinforge_tools.export.html skeinforge-0005_tb/documentation/skeinforge_tools.export.html
*** skeinforge-0005/documentation/skeinforge_tools.export.html	2009-11-03 09:20:17.000000000 -0800
--- skeinforge-0005_tb/documentation/skeinforge_tools.export.html	2009-11-04 09:16:05.000000000 -0800
***************
*** 1,14 ****
  
  <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
! <html><head><title>Python: module skeinforge_tools.export</title>
  </head><body bgcolor="#f0f0f8">
  
  <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
  <tr bgcolor="#7799ee">
  <td valign=bottom>&nbsp;<br>
! <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong><a href="skeinforge_tools.html"><font color="#ffffff">skeinforge_tools</font></a>.export</strong></big></big> ($Date: 2008/21/04 $)</font></td
  ><td align=right valign=bottom
! ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/home/enrique/Desktop/backup/babbleold/script/reprap/pyRepRap/skeinforge_tools/export.py">/home/enrique/Desktop/backup/babbleold/script/reprap/pyRepRap/skeinforge_tools/export.py</a></font></td></tr></table>
      <p><tt>Export&nbsp;is&nbsp;a&nbsp;script&nbsp;to&nbsp;pick&nbsp;an&nbsp;export&nbsp;plugin&nbsp;and&nbsp;optionally&nbsp;print&nbsp;the&nbsp;output&nbsp;to&nbsp;a&nbsp;file.<br>
  &nbsp;<br>
  The&nbsp;default&nbsp;'Activate&nbsp;Export'&nbsp;checkbox&nbsp;is&nbsp;on.&nbsp;&nbsp;When&nbsp;it&nbsp;is&nbsp;on,&nbsp;the&nbsp;functions&nbsp;described&nbsp;below&nbsp;will&nbsp;work,&nbsp;when&nbsp;it&nbsp;is&nbsp;off,&nbsp;the&nbsp;functions<br>
--- 1,14 ----
  
  <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
! <html><head><title>Python: module export</title>
  </head><body bgcolor="#f0f0f8">
  
  <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
  <tr bgcolor="#7799ee">
  <td valign=bottom>&nbsp;<br>
! <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>export</strong></big></big> ($Date: 2008/21/04 $)</font></td
  ><td align=right valign=bottom
! ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/Applications/MakerBot/SkeinFox 1.0.app/Contents/Resources/skeinforge-0005/skeinforge_tools/export.py">/Applications/MakerBot/SkeinFox 1.0.app/Contents/Resources/skeinforge-0005/skeinforge_tools/export.py</a></font></td></tr></table>
      <p><tt>Export&nbsp;is&nbsp;a&nbsp;script&nbsp;to&nbsp;pick&nbsp;an&nbsp;export&nbsp;plugin&nbsp;and&nbsp;optionally&nbsp;print&nbsp;the&nbsp;output&nbsp;to&nbsp;a&nbsp;file.<br>
  &nbsp;<br>
  The&nbsp;default&nbsp;'Activate&nbsp;Export'&nbsp;checkbox&nbsp;is&nbsp;on.&nbsp;&nbsp;When&nbsp;it&nbsp;is&nbsp;on,&nbsp;the&nbsp;functions&nbsp;described&nbsp;below&nbsp;will&nbsp;work,&nbsp;when&nbsp;it&nbsp;is&nbsp;off,&nbsp;the&nbsp;functions<br>
***************
*** 25,31 ****
  the&nbsp;gcode&nbsp;is&nbsp;generated&nbsp;by&nbsp;skeinforge.&nbsp;&nbsp;If&nbsp;the&nbsp;"Delete&nbsp;Comments"&nbsp;checkbox&nbsp;is&nbsp;true,&nbsp;export&nbsp;will&nbsp;delete&nbsp;the&nbsp;comments.&nbsp;&nbsp;The&nbsp;M110<br>
  gcode&nbsp;and&nbsp;the&nbsp;comments&nbsp;are&nbsp;not&nbsp;necessary&nbsp;to&nbsp;run&nbsp;a&nbsp;fabricator.<br>
  &nbsp;<br>
! When&nbsp;export&nbsp;is&nbsp;exporting&nbsp;the&nbsp;code,&nbsp;if&nbsp;there&nbsp;is&nbsp;a&nbsp;file&nbsp;replace.csv,&nbsp;it&nbsp;will&nbsp;replace&nbsp;the&nbsp;word&nbsp;in&nbsp;the&nbsp;first&nbsp;column&nbsp;be&nbsp;its&nbsp;replacement&nbsp;in<br>
  the&nbsp;second&nbsp;column.&nbsp;&nbsp;There&nbsp;is&nbsp;an&nbsp;example&nbsp;file&nbsp;replace_example.csv&nbsp;to&nbsp;demonstrate&nbsp;the&nbsp;comma&nbsp;separated&nbsp;format,&nbsp;which&nbsp;can&nbsp;be<br>
  edited&nbsp;in&nbsp;a&nbsp;text&nbsp;editor&nbsp;or&nbsp;a&nbsp;spreadsheet.<br>
  &nbsp;<br>
--- 25,31 ----
  the&nbsp;gcode&nbsp;is&nbsp;generated&nbsp;by&nbsp;skeinforge.&nbsp;&nbsp;If&nbsp;the&nbsp;"Delete&nbsp;Comments"&nbsp;checkbox&nbsp;is&nbsp;true,&nbsp;export&nbsp;will&nbsp;delete&nbsp;the&nbsp;comments.&nbsp;&nbsp;The&nbsp;M110<br>
  gcode&nbsp;and&nbsp;the&nbsp;comments&nbsp;are&nbsp;not&nbsp;necessary&nbsp;to&nbsp;run&nbsp;a&nbsp;fabricator.<br>
  &nbsp;<br>
! When&nbsp;export&nbsp;is&nbsp;exporting&nbsp;the&nbsp;code,&nbsp;if&nbsp;there&nbsp;is&nbsp;a&nbsp;file&nbsp;replace.csv,&nbsp;it&nbsp;will&nbsp;replace&nbsp;the&nbsp;word&nbsp;in&nbsp;the&nbsp;first&nbsp;column&nbsp;by&nbsp;its&nbsp;replacement&nbsp;in<br>
  the&nbsp;second&nbsp;column.&nbsp;&nbsp;There&nbsp;is&nbsp;an&nbsp;example&nbsp;file&nbsp;replace_example.csv&nbsp;to&nbsp;demonstrate&nbsp;the&nbsp;comma&nbsp;separated&nbsp;format,&nbsp;which&nbsp;can&nbsp;be<br>
  edited&nbsp;in&nbsp;a&nbsp;text&nbsp;editor&nbsp;or&nbsp;a&nbsp;spreadsheet.<br>
  &nbsp;<br>
***************
*** 36,42 ****
  &nbsp;<br>
  The&nbsp;following&nbsp;examples&nbsp;export&nbsp;the&nbsp;files&nbsp;Screw&nbsp;Holder&nbsp;Bottom.stl.&nbsp;&nbsp;The&nbsp;examples&nbsp;are&nbsp;run&nbsp;in&nbsp;a&nbsp;terminal&nbsp;in&nbsp;the&nbsp;folder&nbsp;which&nbsp;contains<br>
  Screw&nbsp;Holder&nbsp;Bottom.stl&nbsp;&amp;&nbsp;export.py.&nbsp;&nbsp;The&nbsp;function&nbsp;writeOutput&nbsp;checks&nbsp;to&nbsp;see&nbsp;if&nbsp;the&nbsp;text&nbsp;has&nbsp;been&nbsp;exported,&nbsp;if&nbsp;not&nbsp;they&nbsp;call<br>
! getUnpauseChainGcode&nbsp;in&nbsp;unpause.py&nbsp;to&nbsp;unpause&nbsp;the&nbsp;text;&nbsp;once&nbsp;they&nbsp;have&nbsp;the&nbsp;unpaused&nbsp;text,&nbsp;then&nbsp;it&nbsp;exports.<br>
  &nbsp;<br>
  &nbsp;<br>
  &gt;&nbsp;python&nbsp;export.py<br>
--- 36,42 ----
  &nbsp;<br>
  The&nbsp;following&nbsp;examples&nbsp;export&nbsp;the&nbsp;files&nbsp;Screw&nbsp;Holder&nbsp;Bottom.stl.&nbsp;&nbsp;The&nbsp;examples&nbsp;are&nbsp;run&nbsp;in&nbsp;a&nbsp;terminal&nbsp;in&nbsp;the&nbsp;folder&nbsp;which&nbsp;contains<br>
  Screw&nbsp;Holder&nbsp;Bottom.stl&nbsp;&amp;&nbsp;export.py.&nbsp;&nbsp;The&nbsp;function&nbsp;writeOutput&nbsp;checks&nbsp;to&nbsp;see&nbsp;if&nbsp;the&nbsp;text&nbsp;has&nbsp;been&nbsp;exported,&nbsp;if&nbsp;not&nbsp;they&nbsp;call<br>
! getTwitterbotChainGcode&nbsp;in&nbsp;twitterbot.py&nbsp;to&nbsp;twitterbot&nbsp;the&nbsp;text;&nbsp;once&nbsp;they&nbsp;have&nbsp;the&nbsp;twitterbotted&nbsp;text,&nbsp;then&nbsp;it&nbsp;exports.<br>
  &nbsp;<br>
  &nbsp;<br>
  &gt;&nbsp;python&nbsp;export.py<br>
***************
*** 77,83 ****
  <a href="skeinforge_tools.skeinforge_utilities.preferences.html">skeinforge_tools.skeinforge_utilities.preferences</a><br>
  <a href="sys.html">sys</a><br>
  <a href="time.html">time</a><br>
! </td><td width="25%" valign=top><a href="skeinforge_tools.unpause.html">skeinforge_tools.unpause</a><br>
  </td></tr></table></td></tr></table><p>
  <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
  <tr bgcolor="#ee77aa">
--- 77,83 ----
  <a href="skeinforge_tools.skeinforge_utilities.preferences.html">skeinforge_tools.skeinforge_utilities.preferences</a><br>
  <a href="sys.html">sys</a><br>
  <a href="time.html">time</a><br>
! </td><td width="25%" valign=top><a href="skeinforge_tools.twitterbot.html">skeinforge_tools.twitterbot</a><br>
  </td></tr></table></td></tr></table><p>
  <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
  <tr bgcolor="#ee77aa">
***************
*** 86,93 ****
      
  <tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
  <td width="100%"><dl>
! <dt><font face="helvetica, arial"><a href="skeinforge_tools.export.html#ExportPreferences">ExportPreferences</a>
! </font></dt><dt><font face="helvetica, arial"><a href="skeinforge_tools.export.html#ExportSkein">ExportSkein</a>
  </font></dt></dl>
   <p>
  <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
--- 86,93 ----
      
  <tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
  <td width="100%"><dl>
! <dt><font face="helvetica, arial"><a href="export.html#ExportPreferences">ExportPreferences</a>
! </font></dt><dt><font face="helvetica, arial"><a href="export.html#ExportSkein">ExportSkein</a>
  </font></dt></dl>
   <p>
  <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
diff -rcN --exclude=.DS_STORE skeinforge-0005/documentation/skeinforge_tools.twitterbot.html skeinforge-0005_tb/documentation/skeinforge_tools.twitterbot.html
*** skeinforge-0005/documentation/skeinforge_tools.twitterbot.html	1969-12-31 16:00:00.000000000 -0800
--- skeinforge-0005_tb/documentation/skeinforge_tools.twitterbot.html	2009-11-04 09:16:06.000000000 -0800
***************
*** 0 ****
--- 1,187 ----
+ 
+ <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
+ <html><head><title>Python: module twitterbot</title>
+ </head><body bgcolor="#f0f0f8">
+ 
+ <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
+ <tr bgcolor="#7799ee">
+ <td valign=bottom>&nbsp;<br>
+ <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>twitterbot</strong></big></big> (version $0.1 $, $Date: 2009/01/11 $)</font></td
+ ><td align=right valign=bottom
+ ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/Applications/MakerBot/SkeinFox 1.0.app/Contents/Resources/skeinforge-0005/skeinforge_tools/twitterbot.py">/Applications/MakerBot/SkeinFox 1.0.app/Contents/Resources/skeinforge-0005/skeinforge_tools/twitterbot.py</a></font></td></tr></table>
+     <p><tt>Twitterbot&nbsp;is&nbsp;a&nbsp;tool&nbsp;to&nbsp;insert&nbsp;Twitterbot&nbsp;M-code&nbsp;into&nbsp;a&nbsp;gcode&nbsp;file&nbsp;so&nbsp;that&nbsp;a&nbsp;modified&nbsp;version&nbsp;of&nbsp;ReplicatorG&nbsp;can&nbsp;tweet&nbsp;printing&nbsp;progress&nbsp;to&nbsp;a&nbsp;Twitter&nbsp;account.<br>
+ Rick&nbsp;Pollack&nbsp;wrote&nbsp;the&nbsp;code&nbsp;to&nbsp;enable&nbsp;ReplicatorG&nbsp;to&nbsp;call&nbsp;the&nbsp;Twitter&nbsp;API&nbsp;via&nbsp;the&nbsp;twitter4j&nbsp;library.<br>
+ You&nbsp;can&nbsp;get&nbsp;the&nbsp;necessary&nbsp;files&nbsp;to&nbsp;modify&nbsp;ReplicatorG&nbsp;here:&nbsp;<a href="http://makerbot.googlegroups.com/web/TwitterBot+Src+Update+1.zip">http://makerbot.googlegroups.com/web/TwitterBot+Src+Update+1.zip</a><br>
+ This&nbsp;tool&nbsp;has&nbsp;only&nbsp;been&nbsp;tested&nbsp;with&nbsp;Skeinforge-0005&nbsp;and&nbsp;ReplicatorG-0009.<br>
+ &nbsp;<br>
+ The&nbsp;default&nbsp;'Activate&nbsp;Twitterbot'&nbsp;checkbox&nbsp;is&nbsp;off.&nbsp;&nbsp;When&nbsp;it&nbsp;is&nbsp;on,&nbsp;the&nbsp;functions&nbsp;described&nbsp;below&nbsp;will&nbsp;be&nbsp;called.&nbsp;When&nbsp;it&nbsp;is&nbsp;off,&nbsp;the&nbsp;functions<br>
+ will&nbsp;not&nbsp;be&nbsp;called.<br>
+ &nbsp;<br>
+ The&nbsp;tool's&nbsp;Preferences&nbsp;are:<br>
+ &nbsp;<br>
+ 'Activate&nbsp;Twitterbot'&nbsp;-&nbsp;Check&nbsp;this&nbsp;to&nbsp;enable&nbsp;the&nbsp;tool.&nbsp;Default&nbsp;is&nbsp;un-checked&nbsp;or&nbsp;off.<br>
+ 'Twitter&nbsp;Username'&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;Username&nbsp;for&nbsp;the&nbsp;Twitter&nbsp;account.&nbsp;Default&nbsp;is&nbsp;empty.<br>
+ 'Twitter&nbsp;Password'&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;Password&nbsp;for&nbsp;the&nbsp;Twitter&nbsp;account.&nbsp;Default&nbsp;is&nbsp;empty.<br>
+ 'Hashtag(s)'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;Space-delimited&nbsp;hashtags&nbsp;to&nbsp;append&nbsp;to&nbsp;each&nbsp;tweet.&nbsp;Default&nbsp;is&nbsp;#MakerBot&nbsp;#Twitterbot.<br>
+ &nbsp;<br>
+ Since&nbsp;your&nbsp;Twitter&nbsp;credentials&nbsp;are&nbsp;written&nbsp;to&nbsp;the&nbsp;generated&nbsp;gcode&nbsp;file,&nbsp;either&nbsp;remove&nbsp;them&nbsp;before&nbsp;sharing&nbsp;the&nbsp;file,&nbsp;or&nbsp;re-run&nbsp;with&nbsp;'Activate&nbsp;Twitterbot'&nbsp;off.&nbsp;<br>
+ &nbsp;<br>
+ IMPORTANT!&nbsp;If&nbsp;you&nbsp;forget&nbsp;to&nbsp;remove&nbsp;your&nbsp;credentials&nbsp;after&nbsp;sharing&nbsp;a&nbsp;file,&nbsp;change&nbsp;your&nbsp;Twitter&nbsp;password&nbsp;immediately!<br>
+ &nbsp;<br>
+ NOTE:&nbsp;For&nbsp;tall,&nbsp;and&nbsp;therefore&nbsp;many&nbsp;layered&nbsp;source&nbsp;files,&nbsp;it&nbsp;is&nbsp;quite&nbsp;possible&nbsp;to&nbsp;exceed&nbsp;the&nbsp;Twitter&nbsp;rate&nbsp;limit&nbsp;with&nbsp;a&nbsp;single&nbsp;print.<br>
+ For&nbsp;more&nbsp;information&nbsp;see:&nbsp;<a href="http://apiwiki.twitter.com/Rate-limiting">http://apiwiki.twitter.com/Rate-limiting</a><br>
+ This&nbsp;may&nbsp;be&nbsp;addressed&nbsp;in&nbsp;a&nbsp;future&nbsp;version&nbsp;of&nbsp;twitterbot.<br>
+ &nbsp;<br>
+ To&nbsp;run&nbsp;twitterbot,&nbsp;in&nbsp;a&nbsp;shell&nbsp;type:<br>
+ &gt;&nbsp;python&nbsp;twitterbot.py<br>
+ &nbsp;<br>
+ The&nbsp;following&nbsp;examples&nbsp;twitterbot&nbsp;-&nbsp;add&nbsp;Twitter&nbsp;M-code&nbsp;to&nbsp;-&nbsp;the&nbsp;files&nbsp;Screw&nbsp;Holder&nbsp;Bottom.gcode&nbsp;&amp;&nbsp;Screw&nbsp;Holder&nbsp;Bottom.stl.&nbsp;&nbsp;The&nbsp;examples&nbsp;are&nbsp;run&nbsp;in&nbsp;a&nbsp;terminal&nbsp;in&nbsp;the<br>
+ folder&nbsp;which&nbsp;contains&nbsp;Screw&nbsp;Holder&nbsp;Bottom.gcode,&nbsp;Screw&nbsp;Holder&nbsp;Bottom.stl&nbsp;and&nbsp;twitterbot.py.&nbsp;&nbsp;The&nbsp;twitterbot&nbsp;function&nbsp;will&nbsp;twitterbot&nbsp;if&nbsp;'Activate&nbsp;Twitterbot'&nbsp;is&nbsp;true,<br>
+ which&nbsp;can&nbsp;be&nbsp;set&nbsp;in&nbsp;the&nbsp;dialog&nbsp;or&nbsp;by&nbsp;changing&nbsp;the&nbsp;preferences&nbsp;file&nbsp;'twitterbot.csv'&nbsp;in&nbsp;the&nbsp;'.skeinforge'&nbsp;folder&nbsp;in&nbsp;your&nbsp;home&nbsp;directory<br>
+ with&nbsp;a&nbsp;text&nbsp;editor&nbsp;or&nbsp;a&nbsp;spreadsheet&nbsp;program&nbsp;set&nbsp;to&nbsp;separate&nbsp;tabs.&nbsp;&nbsp;The&nbsp;functions&nbsp;writeOutput&nbsp;and&nbsp;getTwitterbotChainGcode&nbsp;check<br>
+ to&nbsp;see&nbsp;if&nbsp;the&nbsp;text&nbsp;has&nbsp;been&nbsp;twitterbotted,&nbsp;if&nbsp;not&nbsp;they&nbsp;call&nbsp;getUnpauseChainGcode&nbsp;in&nbsp;unpause.py&nbsp;to&nbsp;unpause&nbsp;the&nbsp;text;&nbsp;once&nbsp;they&nbsp;have&nbsp;the<br>
+ unpaused&nbsp;text,&nbsp;then&nbsp;they&nbsp;twitterbot.<br>
+ &nbsp;<br>
+ &nbsp;<br>
+ &gt;&nbsp;python&nbsp;twitterbot.py<br>
+ This&nbsp;brings&nbsp;up&nbsp;the&nbsp;dialog,&nbsp;after&nbsp;clicking&nbsp;'Twitterbot',&nbsp;the&nbsp;following&nbsp;is&nbsp;printed:<br>
+ File&nbsp;Screw&nbsp;Holder&nbsp;Bottom.stl&nbsp;is&nbsp;being&nbsp;chain&nbsp;twitterbotted.<br>
+ The&nbsp;twitterbotted&nbsp;file&nbsp;is&nbsp;saved&nbsp;as&nbsp;Screw&nbsp;Holder&nbsp;Bottom_twitterbot.gcode<br>
+ &nbsp;<br>
+ &nbsp;<br>
+ &gt;&nbsp;python&nbsp;twitterbot.py&nbsp;Screw&nbsp;Holder&nbsp;Bottom.stl<br>
+ File&nbsp;Screw&nbsp;Holder&nbsp;Bottom.stl&nbsp;is&nbsp;being&nbsp;chain&nbsp;twitterbotted.<br>
+ The&nbsp;twitterbotted&nbsp;file&nbsp;is&nbsp;saved&nbsp;as&nbsp;Screw&nbsp;Holder&nbsp;Bottom_twitterbot.gcode<br>
+ &nbsp;<br>
+ &nbsp;<br>
+ &gt;&nbsp;python<br>
+ Python&nbsp;2.5.1&nbsp;(r251:54863,&nbsp;Jun&nbsp;17&nbsp;2009,&nbsp;20:37:34)&nbsp;<br>
+ [GCC&nbsp;4.0.1&nbsp;(Apple&nbsp;Inc.&nbsp;build&nbsp;5465)]&nbsp;on&nbsp;darwin<br>
+ Type&nbsp;"help",&nbsp;"copyright",&nbsp;"credits"&nbsp;or&nbsp;"license"&nbsp;for&nbsp;more&nbsp;information.<br>
+ &gt;&gt;&gt;&nbsp;import&nbsp;twitterbot<br>
+ &gt;&gt;&gt;&nbsp;twitterbot.<a href="#-main">main</a>()<br>
+ This&nbsp;brings&nbsp;up&nbsp;the&nbsp;twitterbot&nbsp;dialog.<br>
+ &nbsp;<br>
+ &nbsp;<br>
+ &gt;&gt;&gt;&nbsp;twitterbot.<a href="#-writeOutput">writeOutput</a>()<br>
+ Screw&nbsp;Holder&nbsp;Bottom.stl<br>
+ File&nbsp;Screw&nbsp;Holder&nbsp;Bottom.stl&nbsp;is&nbsp;being&nbsp;chain&nbsp;twitterbotted.<br>
+ The&nbsp;twitterbotted&nbsp;file&nbsp;is&nbsp;saved&nbsp;as&nbsp;Screw&nbsp;Holder&nbsp;Bottom_twitterbot.gcode<br>
+ &nbsp;<br>
+ &nbsp;<br>
+ &gt;&gt;&gt;&nbsp;twitter.<a href="#-getTwitterbotGcode">getTwitterbotGcode</a>("<br>
+ (&nbsp;GCode&nbsp;generated&nbsp;by&nbsp;May&nbsp;8,&nbsp;2008&nbsp;carve.py&nbsp;)<br>
+ (&nbsp;Extruder&nbsp;Initialization&nbsp;)<br>
+ ..<br>
+ many&nbsp;lines&nbsp;of&nbsp;gcode<br>
+ ..<br>
+ ")<br>
+ &nbsp;<br>
+ &nbsp;<br>
+ &gt;&gt;&gt;&nbsp;twitterbot.<a href="#-getTwitterbotChainGcode">getTwitterbotChainGcode</a>("<br>
+ (&nbsp;GCode&nbsp;generated&nbsp;by&nbsp;May&nbsp;8,&nbsp;2008&nbsp;carve.py&nbsp;)<br>
+ (&nbsp;Extruder&nbsp;Initialization&nbsp;)<br>
+ ..<br>
+ many&nbsp;lines&nbsp;of&nbsp;gcode<br>
+ ..<br>
+ ")</tt></p>
+ <p>
+ <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
+ <tr bgcolor="#aa55cc">
+ <td colspan=3 valign=bottom>&nbsp;<br>
+ <font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
+     
+ <tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
+ <td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="__init__.html">__init__</a><br>
+ <a href="skeinforge_tools.analyze.html">skeinforge_tools.analyze</a><br>
+ <a href="cStringIO.html">cStringIO</a><br>
+ </td><td width="25%" valign=top><a href="skeinforge_tools.skeinforge_utilities.gcodec.html">skeinforge_tools.skeinforge_utilities.gcodec</a><br>
+ <a href="skeinforge_tools.skeinforge_utilities.interpret.html">skeinforge_tools.skeinforge_utilities.interpret</a><br>
+ <a href="os.html">os</a><br>
+ </td><td width="25%" valign=top><a href="skeinforge_tools.polyfile.html">skeinforge_tools.polyfile</a><br>
+ <a href="skeinforge_tools.skeinforge_utilities.preferences.html">skeinforge_tools.skeinforge_utilities.preferences</a><br>
+ <a href="sys.html">sys</a><br>
+ </td><td width="25%" valign=top><a href="time.html">time</a><br>
+ <a href="skeinforge_tools.unpause.html">skeinforge_tools.unpause</a><br>
+ </td></tr></table></td></tr></table><p>
+ <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
+ <tr bgcolor="#ee77aa">
+ <td colspan=3 valign=bottom>&nbsp;<br>
+ <font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
+     
+ <tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
+ <td width="100%"><dl>
+ <dt><font face="helvetica, arial"><a href="twitterbot.html#TwitterbotPreferences">TwitterbotPreferences</a>
+ </font></dt><dt><font face="helvetica, arial"><a href="twitterbot.html#TwitterbotSkein">TwitterbotSkein</a>
+ </font></dt></dl>
+  <p>
+ <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
+ <tr bgcolor="#ffc8d8">
+ <td colspan=3 valign=bottom>&nbsp;<br>
+ <font color="#000000" face="helvetica, arial"><a name="TwitterbotPreferences">class <strong>TwitterbotPreferences</strong></a></font></td></tr>
+     
+ <tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
+ <td colspan=2><tt>A&nbsp;class&nbsp;to&nbsp;handle&nbsp;the&nbsp;twitterbot&nbsp;preferences.<br>&nbsp;</tt></td></tr>
+ <tr><td>&nbsp;</td>
+ <td width="100%">Methods defined here:<br>
+ <dl><dt><a name="TwitterbotPreferences-__init__"><strong>__init__</strong></a>(self)</dt><dd><tt>Set&nbsp;the&nbsp;default&nbsp;preferences,&nbsp;execute&nbsp;title&nbsp;&amp;&nbsp;preferences&nbsp;fileName.</tt></dd></dl>
+ 
+ <dl><dt><a name="TwitterbotPreferences-execute"><strong>execute</strong></a>(self)</dt><dd><tt>Twitterbot&nbsp;button&nbsp;has&nbsp;been&nbsp;clicked.</tt></dd></dl>
+ 
+ </td></tr></table> <p>
+ <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
+ <tr bgcolor="#ffc8d8">
+ <td colspan=3 valign=bottom>&nbsp;<br>
+ <font color="#000000" face="helvetica, arial"><a name="TwitterbotSkein">class <strong>TwitterbotSkein</strong></a></font></td></tr>
+     
+ <tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
+ <td colspan=2><tt>A&nbsp;class&nbsp;to&nbsp;insert&nbsp;Twitter&nbsp;M-code&nbsp;into&nbsp;a&nbsp;gcode&nbsp;file.<br>&nbsp;</tt></td></tr>
+ <tr><td>&nbsp;</td>
+ <td width="100%">Methods defined here:<br>
+ <dl><dt><a name="TwitterbotSkein-__init__"><strong>__init__</strong></a>(self)</dt></dl>
+ 
+ <dl><dt><a name="TwitterbotSkein-addLine"><strong>addLine</strong></a>(self, line)</dt><dd><tt>Add&nbsp;a&nbsp;line&nbsp;of&nbsp;text&nbsp;and&nbsp;a&nbsp;newline&nbsp;to&nbsp;the&nbsp;output.</tt></dd></dl>
+ 
+ <dl><dt><a name="TwitterbotSkein-createMessage"><strong>createMessage</strong></a>(self, messageText)</dt><dd><tt>Add&nbsp;the&nbsp;message&nbsp;M-Code&nbsp;to&nbsp;a&nbsp;string&nbsp;and&nbsp;return&nbsp;it.</tt></dd></dl>
+ 
+ <dl><dt><a name="TwitterbotSkein-getSavedGCodeFileName"><strong>getSavedGCodeFileName</strong></a>(self)</dt><dd><tt>Get&nbsp;original&nbsp;filename&nbsp;and&nbsp;change&nbsp;to&nbsp;the&nbsp;skeinforged&nbsp;one,&nbsp;i.e.,&nbsp;???_export.gcode.</tt></dd></dl>
+ 
+ <dl><dt><a name="TwitterbotSkein-parseGcode"><strong>parseGcode</strong></a>(self, gcodeText, twitterbotPreferences)</dt><dd><tt>Parse&nbsp;gcode&nbsp;text&nbsp;and&nbsp;store&nbsp;the&nbsp;twitterbot&nbsp;gcode.</tt></dd></dl>
+ 
+ <dl><dt><a name="TwitterbotSkein-parseInitialization"><strong>parseInitialization</strong></a>(self, twitterbotPreferences)</dt><dd><tt>Parse&nbsp;gcode&nbsp;initialization&nbsp;and&nbsp;store&nbsp;the&nbsp;parameters.</tt></dd></dl>
+ 
+ <dl><dt><a name="TwitterbotSkein-parseLine"><strong>parseLine</strong></a>(self, line)</dt><dd><tt>Parse&nbsp;a&nbsp;gcode&nbsp;line&nbsp;and&nbsp;add&nbsp;Twitter&nbsp;M-code&nbsp;to&nbsp;it.</tt></dd></dl>
+ 
+ <dl><dt><a name="TwitterbotSkein-setGcodeFilePathAndName"><strong>setGcodeFilePathAndName</strong></a>(self, gcodeFilePathAndName)</dt><dd><tt>Save&nbsp;path&nbsp;and&nbsp;filename&nbsp;of&nbsp;gcode&nbsp;file&nbsp;to&nbsp;this&nbsp;class.&nbsp;Called&nbsp;by&nbsp;<a href="#-getTwitterbotGcode">getTwitterbotGcode</a>()</tt></dd></dl>
+ 
+ </td></tr></table></td></tr></table><p>
+ <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
+ <tr bgcolor="#eeaa77">
+ <td colspan=3 valign=bottom>&nbsp;<br>
+ <font color="#ffffff" face="helvetica, arial"><big><strong>Functions</strong></big></font></td></tr>
+     
+ <tr><td bgcolor="#eeaa77"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
+ <td width="100%"><dl><dt><a name="-getTwitterbotChainGcode"><strong>getTwitterbotChainGcode</strong></a>(fileName, gcodeText, twitterbotPreferences<font color="#909090">=None</font>)</dt><dd><tt>Add&nbsp;Twitterbot&nbsp;M-code&nbsp;to&nbsp;a&nbsp;gcode&nbsp;text.&nbsp;&nbsp;Chain&nbsp;twitterbot&nbsp;the&nbsp;gcode&nbsp;if&nbsp;it&nbsp;is&nbsp;not&nbsp;already&nbsp;twitterbotted.</tt></dd></dl>
+  <dl><dt><a name="-getTwitterbotGcode"><strong>getTwitterbotGcode</strong></a>(gcodeText, fileName, twitterbotPreferences<font color="#909090">=None</font>)</dt><dd><tt>Add&nbsp;Twitterbot&nbsp;M-code&nbsp;to&nbsp;a&nbsp;gcode&nbsp;text.</tt></dd></dl>
+  <dl><dt><a name="-main"><strong>main</strong></a>(hashtable<font color="#909090">=None</font>)</dt><dd><tt>Display&nbsp;the&nbsp;Twitterbot&nbsp;dialog.</tt></dd></dl>
+  <dl><dt><a name="-writeOutput"><strong>writeOutput</strong></a>(fileName<font color="#909090">=''</font>)</dt><dd><tt>Twitterbot&nbsp;a&nbsp;gcode&nbsp;file.&nbsp;&nbsp;Chain&nbsp;twitterbot&nbsp;the&nbsp;gcode&nbsp;if&nbsp;it&nbsp;is&nbsp;not&nbsp;already&nbsp;twitterbotted.&nbsp;&nbsp;If&nbsp;no&nbsp;fileName&nbsp;is&nbsp;specified,&nbsp;twitterbot&nbsp;the&nbsp;first&nbsp;unmodified&nbsp;gcode&nbsp;file&nbsp;in&nbsp;this&nbsp;folder.</tt></dd></dl>
+ </td></tr></table><p>
+ <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
+ <tr bgcolor="#55aa55">
+ <td colspan=3 valign=bottom>&nbsp;<br>
+ <font color="#ffffff" face="helvetica, arial"><big><strong>Data</strong></big></font></td></tr>
+     
+ <tr><td bgcolor="#55aa55"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
+ <td width="100%"><strong>__author__</strong> = 'Miles Lightwood (m@teamteamusa.com)'<br>
+ <strong>__date__</strong> = '$Date: 2009/01/11 $'<br>
+ <strong>__license__</strong> = 'GPL 3.0'<br>
+ <strong>__version__</strong> = '$0.1 $'<br>
+ <strong>absolute_import</strong> = _Feature((2, 5, 0, 'alpha', 1), (2, 7, 0, 'alpha', 0), 16384)</td></tr></table><p>
+ <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
+ <tr bgcolor="#7799ee">
+ <td colspan=3 valign=bottom>&nbsp;<br>
+ <font color="#ffffff" face="helvetica, arial"><big><strong>Author</strong></big></font></td></tr>
+     
+ <tr><td bgcolor="#7799ee"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
+ <td width="100%">Miles&nbsp;Lightwood&nbsp;(m@teamteamusa.com)</td></tr></table>
+ </body></html>
\ No newline at end of file
diff -rcN --exclude=.DS_STORE skeinforge-0005/skeinforge.py skeinforge-0005_tb/skeinforge.py
*** skeinforge-0005/skeinforge.py	2009-11-03 09:20:17.000000000 -0800
--- skeinforge-0005_tb/skeinforge.py	2009-11-01 22:41:51.000000000 -0800
***************
*** 266,272 ****
  def writeOutput( fileName = '' ):
  	"Skeinforge a gcode file.  If no fileName is specified, skeinforge the first gcode file in this folder that is not modified."
  	skeinforgePluginFilenames = getSkeinforgeToolFilenames()
! 	toolNames = 'export unpause fillet oozebane wipe hop stretch clip comb tower raft speed multiply fill inset carve'.split()
  	for toolName in toolNames:
  		for skeinforgePluginFilename in skeinforgePluginFilenames:
  			if skeinforgePluginFilename == toolName:
--- 266,272 ----
  def writeOutput( fileName = '' ):
  	"Skeinforge a gcode file.  If no fileName is specified, skeinforge the first gcode file in this folder that is not modified."
  	skeinforgePluginFilenames = getSkeinforgeToolFilenames()
! 	toolNames = 'export twitterbot unpause fillet oozebane wipe hop stretch clip comb tower raft speed multiply fill inset carve'.split()
  	for toolName in toolNames:
  		for skeinforgePluginFilename in skeinforgePluginFilenames:
  			if skeinforgePluginFilename == toolName:
diff -rcN --exclude=.DS_STORE skeinforge-0005/skeinforge_tools/export.py skeinforge-0005_tb/skeinforge_tools/export.py
*** skeinforge-0005/skeinforge_tools/export.py	2009-11-03 09:20:17.000000000 -0800
--- skeinforge-0005_tb/skeinforge_tools/export.py	2009-11-04 22:46:53.000000000 -0800
***************
*** 26,32 ****
  
  The following examples export the files Screw Holder Bottom.stl.  The examples are run in a terminal in the folder which contains
  Screw Holder Bottom.stl & export.py.  The function writeOutput checks to see if the text has been exported, if not they call
! getUnpauseChainGcode in unpause.py to unpause the text; once they have the unpaused text, then it exports.
  
  
  > python export.py
--- 26,32 ----
  
  The following examples export the files Screw Holder Bottom.stl.  The examples are run in a terminal in the folder which contains
  Screw Holder Bottom.stl & export.py.  The function writeOutput checks to see if the text has been exported, if not they call
! getTwitterbotChainGcode in twitterbot.py to twitterbot the text; once they have the twitterbotted text, then it exports.
  
  
  > python export.py
***************
*** 62,68 ****
  from skeinforge_tools import analyze
  from skeinforge_tools.skeinforge_utilities import interpret
  from skeinforge_tools import polyfile
! from skeinforge_tools import unpause
  import cStringIO
  import os
  import sys
--- 62,68 ----
  from skeinforge_tools import analyze
  from skeinforge_tools.skeinforge_utilities import interpret
  from skeinforge_tools import polyfile
! from skeinforge_tools import twitterbot
  import cStringIO
  import os
  import sys
***************
*** 125,132 ****
  	print( 'File ' + gcodec.getSummarizedFilename( fileName ) + ' is being chain exported.' )
  	suffixFilename = fileName[ : fileName.rfind( '.' ) ] + '_export.' + exportPreferences.fileExtension.value
  	gcodeText = gcodec.getGcodeFileText( fileName, '' )
! 	if not gcodec.isProcedureDone( gcodeText, 'unpause' ):
! 		gcodeText = unpause.getUnpauseChainGcode( fileName, gcodeText )
  	if gcodeText == '':
  		return
  	analyze.writeOutput( suffixFilename, gcodeText )
--- 125,132 ----
  	print( 'File ' + gcodec.getSummarizedFilename( fileName ) + ' is being chain exported.' )
  	suffixFilename = fileName[ : fileName.rfind( '.' ) ] + '_export.' + exportPreferences.fileExtension.value
  	gcodeText = gcodec.getGcodeFileText( fileName, '' )
! 	if not gcodec.isProcedureDone( gcodeText, 'twitterbot' ):
! 		gcodeText = twitterbot.getTwitterbotChainGcode( fileName, gcodeText )
  	if gcodeText == '':
  		return
  	analyze.writeOutput( suffixFilename, gcodeText )
diff -rcN --exclude=.DS_STORE skeinforge-0005/skeinforge_tools/twitterbot.py skeinforge-0005_tb/skeinforge_tools/twitterbot.py
*** skeinforge-0005/skeinforge_tools/twitterbot.py	1969-12-31 16:00:00.000000000 -0800
--- skeinforge-0005_tb/skeinforge_tools/twitterbot.py	2009-11-09 23:32:39.000000000 -0800
***************
*** 0 ****
--- 1,283 ----
+ """
+ Twitterbot is a tool to insert Twitterbot M-code into a gcode file so that a modified version of ReplicatorG can tweet printing progress to a Twitter account.
+ Rick Pollack wrote the code to enable ReplicatorG to call the Twitter API via the twitter4j library.
+ You can get the necessary files to modify ReplicatorG here: http://makerbot.googlegroups.com/web/TwitterBot+Src+Update+1.zip
+ This tool has been tested with Skeinforge-0005, Skeinforge-0006, and ReplicatorG-0009.
+ 
+ The default 'Activate Twitterbot' checkbox is off.  When it is on, the functions described below will be called. When it is off, the functions
+ will not be called.
+ 
+ The tool's Preferences are:
+ 
+ 'Activate Twitterbot'   - Check this to enable the tool. Default is un-checked or off.
+ 'Twitter Username'      - Username for the Twitter account. Default is empty.
+ 'Twitter Password'      - Password for the Twitter account. Default is empty.
+ 'Layers Between Tweets' - The number of layers between each tweet, e.g., 3 means tweet each 3rd layer. Default is 10.
+ 'Hashtag(s)'            - Space-delimited hashtags to append to each tweet. Default is #MakerBot #Twitterbot.
+ 
+ Since your Twitter credentials are written to the generated gcode file, either remove them before sharing the file, or re-run with 'Activate Twitterbot' off. 
+ 
+ IMPORTANT! If you forget to remove your credentials after sharing a file, change your Twitter password immediately!
+ 
+ NOTE: For tall, and therefore many layered source files, it is quite possible to exceed the Twitter rate limit with a single print.
+ For more information see: http://apiwiki.twitter.com/Rate-limiting
+ This may be addressed in a future version of twitterbot.
+ 
+ To run twitterbot, in a shell type:
+ > python twitterbot.py
+ 
+ The following examples twitterbot - add Twitter M-code to - the files Screw Holder Bottom.gcode & Screw Holder Bottom.stl.  The examples are run in a terminal in the
+ folder which contains Screw Holder Bottom.gcode, Screw Holder Bottom.stl and twitterbot.py.  The twitterbot function will twitterbot if 'Activate Twitterbot' is true,
+ which can be set in the dialog or by changing the preferences file 'twitterbot.csv' in the '.skeinforge' folder in your home directory
+ with a text editor or a spreadsheet program set to separate tabs.  The functions writeOutput and getTwitterbotChainGcode check
+ to see if the text has been twitterbotted, if not they call getUnpauseChainGcode in unpause.py to unpause the text; once they have the
+ unpaused text, then they twitterbot.
+ 
+ 
+ > python twitterbot.py
+ This brings up the dialog, after clicking 'Twitterbot', the following is printed:
+ File Screw Holder Bottom.stl is being chain twitterbotted.
+ The twitterbotted file is saved as Screw Holder Bottom_twitterbot.gcode
+ 
+ 
+ > python twitterbot.py Screw Holder Bottom.stl
+ File Screw Holder Bottom.stl is being chain twitterbotted.
+ The twitterbotted file is saved as Screw Holder Bottom_twitterbot.gcode
+ 
+ 
+ > python
+ Python 2.5.1 (r251:54863, Jun 17 2009, 20:37:34) 
+ [GCC 4.0.1 (Apple Inc. build 5465)] on darwin
+ Type "help", "copyright", "credits" or "license" for more information.
+ >>> import twitterbot
+ >>> twitterbot.main()
+ This brings up the twitterbot dialog.
+ 
+ 
+ >>> twitterbot.writeOutput()
+ Screw Holder Bottom.stl
+ File Screw Holder Bottom.stl is being chain twitterbotted.
+ The twitterbotted file is saved as Screw Holder Bottom_twitterbot.gcode
+ 
+ 
+ >>> twitter.getTwitterbotGcode("
+ ( GCode generated by May 8, 2008 carve.py )
+ ( Extruder Initialization )
+ ..
+ many lines of gcode
+ ..
+ ")
+ 
+ 
+ >>> twitterbot.getTwitterbotChainGcode("
+ ( GCode generated by May 8, 2008 carve.py )
+ ( Extruder Initialization )
+ ..
+ many lines of gcode
+ ..
+ ")
+ 
+ """
+ 
+ #TODO:
+ #      * Make Starting, Printing layer, and Finishing, messages configurable, i.e., add them to Preferences. Need to figure out string replacing in Python first
+ #      * Add quips to Preferences so humorous tweets can be sent randomly or when certain events occur, e.g., What's that smell?, Copper is the new black!, This print sure is ugly!, Only at layer 5? I need a rest!
+ #      * To reduce the number of tweets per print, calculate the number of lines in the file (maybe G lines instead) and print a configurable percentage (dropdown menu?), 
+ #      e.g., 25 means tweet only when every 25% of the print is printing. 25 would result in 6 tweets (1 start tweet + 4 progress tweets + 1 end tweet)
+ #      * If Layers Between Tweets is less than 0 change to default, i.e., 5, and save to Preferencs file [twitterbot.csv]
+ 
+ from __future__ import absolute_import
+ #Init has to be imported first because it has code to workaround the python bug where relative imports don't work if the module is imported as a main module.
+ import __init__
+ 
+ #from skeinforge_tools.skeinforge_utilities import euclidean
+ from skeinforge_tools.skeinforge_utilities import gcodec
+ from skeinforge_tools.skeinforge_utilities import preferences
+ from skeinforge_tools import analyze
+ from skeinforge_tools import unpause
+ from skeinforge_tools.skeinforge_utilities import interpret
+ from skeinforge_tools import polyfile
+ import cStringIO
+ #import math
+ import sys
+ import os
+ import time
+ 
+ 
+ __author__ = "Miles Lightwood (m@teamteamusa.com)"
+ __date__ = "$Date: 2009/08/11 $"
+ __version__ = "$0.2 $"
+ __license__ = "GPL 3.0"
+ 
+ def getTwitterbotChainGcode( fileName, gcodeText, twitterbotPreferences = None ):
+ 	"Add Twitterbot M-code to a gcode text.  Chain twitterbot the gcode if it is not already twitterbotted."
+ 	gcodeText = gcodec.getGcodeFileText( fileName, gcodeText )
+ 	if not gcodec.isProcedureDone( gcodeText, 'unpause' ):
+ 		gcodeText = unpause.getUnpauseChainGcode( fileName, gcodeText )
+ 		print( 'getTwitterbotChainGcode(fileName): ' + fileName )
+ 	return getTwitterbotGcode( gcodeText, fileName, twitterbotPreferences )
+ 
+ def getTwitterbotGcode( gcodeText, fileName, twitterbotPreferences = None ):
+ 	"Add Twitterbot M-code to a gcode text."
+ 	if gcodeText == '':
+ 		return ''
+ 	if gcodec.isProcedureDone( gcodeText, 'twitterbot' ):
+ 		return gcodeText
+ 	if twitterbotPreferences == None:
+ 		twitterbotPreferences = TwitterbotPreferences()
+ 		preferences.readPreferences( twitterbotPreferences )
+ 	if not twitterbotPreferences.activateTwitterbot.value:
+ 		return gcodeText
+ 	skein = TwitterbotSkein()
+ 	skein.setGcodeFilePathAndName( fileName )
+ 	skein.parseGcode( gcodeText, twitterbotPreferences )
+ 	return skein.output.getvalue()
+ 
+ def writeOutput( fileName = '' ):
+ 	"Twitterbot a gcode file.  Chain twitterbot the gcode if it is not already twitterbotted.  If no fileName is specified, twitterbot the first unmodified gcode file in this folder."
+ 	if fileName == '':
+ 		unmodified = interpret.getGNUTranslatorFilesUnmodified()
+ 		if len( unmodified ) == 0:
+ 			print( "There are no unmodified gcode files in this folder." )
+ 			return
+ 		fileName = unmodified[ 0 ]
+ 	twitterbotPreferences = TwitterbotPreferences()
+ 	preferences.readPreferences( twitterbotPreferences )
+ 	startTime = time.time()
+ 	print( 'File ' + gcodec.getSummarizedFilename( fileName ) + ' is being chain twitterbotted.' )
+ 	suffixFilename = fileName[ : fileName.rfind( '.' ) ] + '_twitterbot.gcode'
+ 	twitterbotGcode = getTwitterbotChainGcode( fileName, '', twitterbotPreferences )
+ 	if twitterbotGcode == '':
+ 		return
+ 	gcodec.writeFileText( suffixFilename, twitterbotGcode )
+ 	print( 'The twitterbotted file is saved as ' + gcodec.getSummarizedFilename( suffixFilename ) )
+ 	analyze.writeOutput( suffixFilename, twitterbotGcode )
+ 	print( 'It took ' + str( int( round( time.time() - startTime ) ) ) + ' seconds to add Twitterbot codes to the file.' )
+ 			
+ class TwitterbotPreferences:
+ 	"A class to handle the twitterbot preferences."
+ 	def __init__( self ):
+ 		"Set the default preferences, execute title & preferences fileName."
+ 		self.archive = []
+ 		self.activateTwitterbot = preferences.BooleanPreference().getFromValue( 'Activate Twitterbot', False )
+ 		self.archive.append( self.activateTwitterbot )
+ 		self.twitterUsername = preferences.StringPreference().getFromValue( 'Twitter Username:', '' )
+ 		self.archive.append( self.twitterUsername )
+ 		self.twitterPassword = preferences.StringPreference().getFromValue( 'Twitter Password:', '' )
+ 		self.archive.append( self.twitterPassword )
+ 		self.layersBetweenTweets = preferences.StringPreference().getFromValue( 'Layers Between Tweets:', '10' )
+ 		self.archive.append( self.layersBetweenTweets )
+ 		self.twitterHashtags = preferences.StringPreference().getFromValue( 'Hashtag(s):', '#MakerBot #Twitterbot' )
+ 		self.archive.append( self.twitterHashtags )
+ 		self.fileNameInput = preferences.Filename().getFromFilename( interpret.getGNUTranslatorGcodeFileTypeTuples(), 'Open File to insert Twitterbot code into', '' )
+ 		self.archive.append( self.fileNameInput )
+ 		#Create the archive, title of the execute button, title of the dialog & preferences fileName.
+ 		self.executeTitle = 'Twitterbot'
+ 		self.saveTitle = 'Save Preferences'
+ 		preferences.setHelpPreferencesFileNameTitleWindowPosition( self, 'skeinforge_tools.twitterbot.html' )
+ 
+ 	def execute( self ):
+ 		"Twitterbot button has been clicked."
+ 		fileNames = polyfile.getFileOrDirectoryTypesUnmodifiedGcode( self.fileNameInput.value, interpret.getImportPluginFilenames(), self.fileNameInput.wasCancelled )
+ 		for fileName in fileNames:
+ 			writeOutput( fileName )
+ 
+ class TwitterbotSkein:
+ 	"A class to insert Twitter M-code into a gcode file."
+ 	def __init__( self ):
+ 		self.lineIndex = 0
+ 		self.lines = None
+ 		self.output = cStringIO.StringIO()
+ 		# Twitterbot
+ 		self.gcodeFilePathAndName = ''
+ 		self.gcodeFileName = ''
+ 		self.gcodeFilePath = ''
+ 		self.savedGcodeFilename = ''
+ 		self.layerIndex = 1
+ 		self.twitterbotClass = 'TwitterBot'
+ 		self.mCodeInit = 'M997'
+ 		self.mCodeMessage = 'M998'
+ 		# Not used yet
+ 		self.mCodeCleanup = 'M999'
+ 
+ 	def setGcodeFilePathAndName( self, gcodeFilePathAndName ):
+ 		"Save path and filename of gcode file to this class. Called by getTwitterbotGcode()"
+ 		self.gcodeFilePathAndName = gcodeFilePathAndName
+ 	
+ 	def addLine( self, line ):
+ 		"Add a line of text and a newline to the output."
+ 		self.output.write( line + "\n" )
+ 
+ 	def parseGcode( self, gcodeText, twitterbotPreferences ):
+ 		"Parse gcode text and store the twitterbot gcode."
+ 		self.lines = gcodec.getTextLines( gcodeText )
+ 		self.twitterUsername = twitterbotPreferences.twitterUsername.value
+ 		self.twitterPassword = twitterbotPreferences.twitterPassword.value
+ 		self.layersBetweenTweets = twitterbotPreferences.layersBetweenTweets.value
+ 		if int( self.layersBetweenTweets ) < 1:
+ 			self.layersBetweenTweets = '5'
+ 		self.twitterHashtags = twitterbotPreferences.twitterHashtags.value
+ 		#self.fileName = twitterbotPreferences.fileNameInput.value
+ 		self.parseInitialization( twitterbotPreferences )
+ 		#print( "===> self.lineIndex: " + str( self.lineIndex ) )	
+ 		for self.lineIndex in xrange( self.lineIndex, len( self.lines ) ):
+ 			line = self.lines[ self.lineIndex ]
+ 		#	print( '===> Parsing line ' + str( self.lineIndex ) + ': ' + line )
+ 			self.parseLine( line )
+ 
+ 	def parseInitialization( self, twitterbotPreferences ):
+ 		"Parse gcode initialization and store the parameters."
+ 		for self.lineIndex in xrange( len( self.lines ) ):
+ 			line = self.lines[ self.lineIndex ]
+ 			splitLine = line.split()
+ 			firstWord = gcodec.getFirstWord( splitLine )
+ 			if firstWord == '(<extruderInitialization>)':
+ 				self.addLine( '(Twitterbot initialization)' )
+ 				self.addLine( self.mCodeInit + ' ' + self.twitterbotClass + ' ' + self.twitterUsername + ',' + self.twitterPassword )
+ 				self.getSavedGCodeFileName()
+ 				print( 'self.savedGcodeFilename: ' + self.savedGcodeFilename )
+ 				self.addLine( self.createMessage( 'Starting ' + self.savedGcodeFilename + '...' ) )
+ 			elif firstWord == '(</extruderInitialization>)': 
+ 				self.addLine( '(<procedureDone> twitterbot </procedureDone>)' )
+ 				return
+ 			self.addLine( line )
+ 
+ 	def parseLine( self, line ):
+ 		"Parse a gcode line and add Twitter M-code to it."
+ 		splitLine = line.split()
+ 		if len( splitLine ) < 1:
+ 			return
+ 		firstWord = splitLine[ 0 ]
+ 		#print( "===> firstWord: " + firstWord )	
+ 		if firstWord == '(<layer>':
+ 			if self.layerIndex == 1:
+ 				self.addLine( self.createMessage( self.savedGcodeFilename + ': layer ' + str( self.layerIndex ) ) )
+ 			if self.layerIndex % int( self.layersBetweenTweets ) == 0:
+ 				self.addLine( self.createMessage( self.savedGcodeFilename + ': layer ' + str( self.layerIndex ) ) )
+ 			self.layerIndex = self.layerIndex + 1
+ 		elif firstWord == '(</extrusion>)':
+ 			self.getSavedGCodeFileName()
+ 			self.addLine( self.createMessage( 'Finished ' + self.savedGcodeFilename + '!' ) )			
+ 		self.addLine( line )
+ 
+ 	def getSavedGCodeFileName( self ):
+ 		"Get original filename and change to the skeinforged one, i.e., ???_export.gcode."
+ 		if self.savedGcodeFilename == '': 
+ 			self.gcodeFilePath,self.gcodeFileName = os.path.split( self.gcodeFilePathAndName )
+ 			self.savedGcodeFilename = self.gcodeFileName[ : self.gcodeFileName.rfind( '.' ) ] + '_export.gcode'
+ 		
+ 	def createMessage( self, messageText ):
+ 		"Add the message M-Code to a string and return it."
+ 		msg = self.mCodeMessage + " message '" + messageText + " " + self.twitterHashtags + "'"
+ 		#print( '===> msg: ' + msg )
+ 		return msg
+ 
+ def main( hashtable = None ):
+ 	"Display the Twitterbot dialog."
+ 	if len( sys.argv ) > 1:
+ 		writeOutput( ' '.join( sys.argv[ 1 : ] ) )
+ 	else:
+ 		preferences.displayDialog( TwitterbotPreferences() )
+ 
+ if __name__ == "__main__":
+ 	main()
\ No newline at end of file
